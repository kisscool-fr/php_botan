
* 0.7.10, April 7, 2002
 - Added EGD_EntropySource module (es_egd)
 - Added a file tree walking EntropySource (es_ftw)
 - Added MemoryLocking_Allocator module (alloc_mlock)
 - Renamed the pthr_mux, unix_rnd, and mmap_mem modules
 - Changed timer mechanism; the clock method can be switched on the fly.
 - Renamed MmapDisk_Allocator to MemoryMapping_Allocator
 - Renamed ent_file.h to es_file.h (ent_file.h is around, but deprecated)
 - Fixed several bugs in MemoryMapping_Allocator
 - Added more default sources for Unix_EntropySource
 - Changed SecureBuffer to use same allocation methods as SecureVector
 - Added bigint_divcore into mp_core to support BigInt alpha2 release
 - Removed some Pipe functions deprecated since 0.7.8
 - Some fixes for the configure program

* 0.7.9, March 19, 2002
 - Memory allocation substantially revamped
 - Added memory allocation method based on mmap(2) in the mmap_mem module
 - Added ECB and CTS block cipher modes (ecb.h, cts.h)
 - Added a Mutex interface (mutex.h)
 - Added module pthr_mux, implementing the Mutex interface
 - Added Threaded Filter interface (thr_filt.h)
 - All algorithms can now by keyed with SymmetricKey objects
 - More testing occurs with --validate (expected failures)
 - Fixed two bugs reported by Hany Greiss, in Luby-Rackoff and RC6
 - Fixed a buffering bug in Bzip_Decompress and Zlib_Decompress
 - Made X917 safer (and about 1/3 as fast)
 - Documentation updates

* 0.7.8, February 28, 2002
 - More capabilities for Pipe, inspired by SysV STREAMS, including peeking,
   better buffering, and stack ops. NOT BACKWARDS COMPATIBLE: SEE DOCUMENTATION
 - Added a BufferingFilter class
 - Added popen() based EntropySource for generic Unix systems (unix_rnd)
 - Moved 'devrand' module into main distribution (ent_file.h), renamed to
   File_EntropySource, and changed interface somewhat.
 - Made Randpool somewhat more conservative and also 25% faster
 - Minor fixes and updates for the configure script
 - Added some tweaks for memory allocation
 - Documentation updates for the new Pipe interface
 - Fixed various minor bugs
 - Added a couple of new example programs (stack and hasher2)

* 0.7.7, November 24, 2001
 - Filter::send now works in the constructor of a Filter subclass
 - You may now have to include <opencl/pipe.h> explicitly in some code
 - Added preliminary PK infrastructure classes in pubkey.h and pkbase.h
 - Enhancements to SecureVector (append, destroy functions)
 - New infrastructure for secure memory allocation
 - Added IEEE P1363 primitives MGF1, EME1, KDF1
 - Rijndael optimizations and cleanups
 - Changed CipherMode<B> to BlockCipherMode(B*)
 - Fixed a nasty bug in pipe_unixfd
 - Added portions of the BigInt code into the main library
 - Support for VAX, SH, POWER, PowerPC-64, Intel C++

* 0.7.6, October 14, 2001
 - Fixed several serious bugs in SecureVector created in 0.7.5
 - Square optimizations
 - Fixed shared objects on MacOS X and HP-UX
 - Fixed static libs for KCC 4.0; works with KCC 3.4g as well
 - Full support for Athlon and K6 processors using GCC
 - Added a table of prime numbers < 2**16 (primes.h)
 - Some minor documentation updates

* 0.7.5, August 19, 2001
 - Split checksum.h into adler32.h, crc24.h, and crc32.h
 - Split modes.h into cbc.h, cfb.h, and ofb.h
 - CBC_wPadding* has been replaced by CBC_Encryption and CBC_Decryption
 - Added OneAndZeros and NoPadding methods for CBC
 - Added Lion, a very fast block cipher construction
 - Added an S2K base class (s2k.h) and an OpenPGP_S2K class (pgp_s2k.h)
 - Basic types (ciphers, hashes, etc) know their names now (call name())
 - Changed the EntropySource type somewhat
 - Big speed-ups for ISAAC, Adler32, CRC24, and CRC32
 - Optimized CAST-256, DES, SAFER-SK, Serpent, SEAL, MD2, and RIPEMD-160
 - Some semantics of SecureVector have changed slightly
 - The mlock module has been removed for the time being
 - Added string handling functions for hashes and MACs
 - Various non-user-visible cleanups
 - Shared library soname is now set to the full version number

* 0.7.4, July 15, 2001
 - New modules: Zlib, gettimeofday and x86 RTC timers, Unix I/O for Pipe
 - Fixed a vast number of errors in the config script/makefile/specfile
 - Pipe now has a stdio(3) interface as well as C++ iostreams
 - ARC4 supports skipping the first N bytes of the cipher stream (ala MARK4)
 - Bzip2 supports decompressing multiple concatenated streams, and flushing
 - Added a simple 'overall average' score to the benchmarks
 - Fixed a small bug in the POSIX timer module
 - Removed a very-unlikely-to-occur bug in most of the hash functions
 - filtbase.h now includes <iosfwd>, not <iostream>
 - Minor documentation updates

* 0.7.3, June 8, 2001
 - Fix build problems on Solaris/SPARC
 - Fix build problems with Perl versions < 5.6
 - Fixed some stupid code that broke on a few compilers
 - Added string handling functions to Pipe
 - MISTY1 optimizations

* 0.7.2, June 3, 2001
 - Build system supports modules
 - Added modules for mlock, a /dev/random EntropySource, POSIX1.b timers
 - Added Bzip2 compression filter, contributed by Peter Jones
 - GNU make no longer required (tested with 4.4BSD pmake and Solaris make)
 - Fixed minor bug in several of the hash functions
 - Various other minor fixes and changes
 - Updates to the documentation

* 0.7.1, May 16, 2001
 - Rewrote configure script: more consistent and complete
 - Made it easier to find out parameters of types at run time (opencl.h)
 - New functions for finding the version being used (version.h)
 - New SymmetricKey interface for Filters (symkey.h)
 - InvalidKeyLength now records what the invalid key length was
 - Optimized DES, CS-Cipher, MISTY1, Skipjack, XTEA
 - Changed GOST to use correct S-box ordering (incompatible change)
 - Benchmark code was almost totally rewritten
 - Many more entries in the test vector file
 - Fixed minor and idiotic bug in check.cpp

* 0.7.0, March 1, 2001
 - First public release
